#!/bin/bash

set -eo pipefail

if [ $# != 2 ]; then
    echo "How to use: "
    echo -e "\t./bin/backup <borg backup location>"
    exit 1
fi

export NOMAD_ADDR=http://10.42.2.1:4646
export CONSUL_ADDR=http://10.42.2.1:8500
export BORG_REPO="$2"
export BORG_PASSCOMMAND="pass show borg-acs"
time=$(date +%Y-%m-%dT%H:%M:%S)

function nomad_alloc() {
  curl -s $NOMAD_ADDR/v1/job/$1/allocations \
    | jq '.[] | select(.TaskGroup == "'$2'") | select(.ClientStatus == "running") .ID' -r
}

function borg_create() {
  archive_name="acs-$1-$time"
  pv | borg create ::$archive_name -
  echo "ðŸ’¾ $1"
}

(
  curl -s $CONSUL_ADDR/v1/snapshot?dc=dc1 \
    | borg_create consul
)

(
  alloc=$(nomad_alloc acs-interface database)
  nomad exec -t=false $alloc \
    bash -c 'pg_dump -Ox -U $POSTGRES_USER interface' \
    | borg_create interface-database
)

(
  alloc=$(nomad_alloc acs-interface storage)
  nomad exec -t=false $alloc \
    tar c -C / data \
    | borg_create interface-storage
)

(
  alloc=$(nomad_alloc vmck database)
  nomad exec -t=false $alloc \
    bash -c 'pg_dump -Ox -U $POSTGRES_USER vmck' \
    | borg_create vmck-database
)

echo "âœ”Â acs backup successful!"

# to recover:
#   borg extract --stdout $borg_repo::$backup_name
